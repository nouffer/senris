version: "3.9"

services:
   api:
      build:
         context: .
         dockerfile: Dockerfile.gdal
      command: python3 manage.py runserver 0.0.0.0:8100
      volumes:
         - .:/app
      ports:
        - 8000:8000
      env_file:
         - .env
      restart: "on-failure"
      depends_on:
         - postgres-db
      networks:
         - senris-api

   geoserver:
      image: kartoza/geoserver:${GS_VERSION}
      volumes:
        - geoserver-data:/opt/geoserver/data_dir
      ports:
        - ${GEOSERVER_PORT}:8080
      restart: on-failure
      environment:
        - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
        - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
        - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
        - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
        - INITIAL_MEMORY=${INITIAL_MEMORY}
        - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
      depends_on:
        - postgres-db
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3
      networks:
         - senris-api

   postgres-db:
      image: kartoza/postgis:12.0
      ports:
         - 5432:5432
      volumes:
         - postgres_data:/var/lib/postgresql
      environment:
         - POSTGRES_USER=${POSTGRES_USER}
         - POSTGRES_PASS=${POSTGRES_PASS}
         - POSTGRES_DBNAME=${POSTGRES_DBNAME}
      restart: "on-failure"
      networks:
         - senris-api


networks:
   senris-api:
      driver: bridge

volumes:
   postgres_data:
   geoserver-data: